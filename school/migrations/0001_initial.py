# Generated by Django 4.1.6 on 2023-02-09 08:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateField(auto_now=True)),
                ('updated_at', models.DateField(auto_now_add=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('duaration', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='school.basemodel')),
                ('experience', models.IntegerField()),
                ('subject_expertise', models.CharField(max_length=100)),
                ('courses', models.ManyToManyField(to='school.courses')),
            ],
            bases=('school.basemodel',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='school.basemodel')),
                ('major', models.CharField(max_length=100)),
                ('cgpa', models.FloatField()),
                ('courses', models.ManyToManyField(to='school.courses')),
            ],
            bases=('school.basemodel',),
        ),
    ]
